[{"D:\\Next Project\\budget-reactjs-app\\src\\index.js":"1","D:\\Next Project\\budget-reactjs-app\\src\\App.js":"2","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Home.jsx":"3","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Contact\\Contact.jsx":"4","D:\\Next Project\\budget-reactjs-app\\src\\Components\\About\\About.jsx":"5","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Faq\\Faq.jsx":"6","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Balance.jsx":"7","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Expence.jsx":"8","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\List.jsx":"9","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\TotalBudget.jsx":"10"},{"size":347,"mtime":1685623544824,"results":"11","hashOfConfig":"12"},{"size":746,"mtime":1681411109015,"results":"13","hashOfConfig":"12"},{"size":1345,"mtime":1682025273078,"results":"14","hashOfConfig":"12"},{"size":124,"mtime":1679746157276,"results":"15","hashOfConfig":"12"},{"size":220,"mtime":1679745065835,"results":"16","hashOfConfig":"12"},{"size":112,"mtime":1679746216681,"results":"17","hashOfConfig":"12"},{"size":1117,"mtime":1681924344478,"results":"18","hashOfConfig":"12"},{"size":3524,"mtime":1682024809783,"results":"19","hashOfConfig":"12"},{"size":6042,"mtime":1682029253812,"results":"20","hashOfConfig":"12"},{"size":1049,"mtime":1681320405854,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"185na9b",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Next Project\\budget-reactjs-app\\src\\index.js",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\App.js",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Home.jsx",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\Contact\\Contact.jsx",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\About\\About.jsx",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\Faq\\Faq.jsx",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Balance.jsx",["54"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Balance = ({ gettottal, exp }) => {\r\n  // const [color, setColor] = useState(null);\r\n  const [red, setRed] = useState(\"\");\r\n\r\n  if (exp) {\r\n    if (exp.length >= 0) {\r\n      var expTotal = exp.reduce((acc, cur) => acc + parseFloat(cur.amount), 0);\r\n      var remBal = gettottal - expTotal;\r\n      // setColor(remBal);\r\n    } else {\r\n      remBal = 0;\r\n      // setColor(remBal);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (remBal < 0) {\r\n      setRed(\"red\");\r\n    }\r\n  }, [exp]);\r\n\r\n  return (\r\n    <div className=\"box3-1\">\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h4>Total Budget</h4>\r\n        <br />\r\n        <p id=\"total-budget\">{gettottal}</p>\r\n      </div>\r\n\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h4>Expences</h4>\r\n        <br />\r\n\r\n        <p id=\"total-exp\">{expTotal}</p>\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h4>Balance</h4>\r\n        <br />\r\n\r\n        <p id=\"remaning-bal\" className={red}>\r\n        {remBal}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\Expence.jsx",["55"],[],"import { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Expence = ({ exp, setExp, expIndex, expId, setExpIndex }) => {\r\n  const [obj, setObj] = useState({});\r\n\r\n  const handlechange = (e) => {\r\n    if (e.target.value !== \"\") {\r\n      setObj({ ...obj, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const productRef = useRef(null);\r\n  const amountRef = useRef(null);\r\n  const expBtn = useRef(null);\r\n\r\n  const handleclick = () => {\r\n    if (!productRef.current.value || !amountRef.current.value) {\r\n      alert(\"fill the inputs\");\r\n    }\r\n    if (\r\n      Object.entries(obj).length > 0 &&\r\n      productRef.current.value &&\r\n      amountRef.current.value\r\n    ) {\r\n      ////////////////////Time Function/////////////////////////\r\n\r\n      const initTime = new Date();\r\n      const hour = initTime.getHours();\r\n      const isPM = hour >= 12;\r\n      const dateString =\r\n        (\"0\" + initTime.getDate()).slice(-2) +\r\n        \"/\" +\r\n        (\"0\" + (initTime.getMonth() + 1)).slice(-2) +\r\n        \"/\" +\r\n        initTime.getFullYear();\r\n      const timeString =\r\n        (hour % 12 || 12) +\r\n        \":\" +\r\n        (\"0\" + initTime.getMinutes()).slice(-2) +\r\n        \" \" +\r\n        (isPM ? \"PM\" : \"AM\");\r\n\r\n      ///////////////////////Time Function//////////////////////\r\n\r\n      const idObj = {\r\n        ...obj,\r\n        id: exp.length + 1,\r\n        date: dateString,\r\n        time: timeString,\r\n      };\r\n      if (expIndex !== null && expIndex >= 0) {\r\n        var updatedObj = exp.find((e) => {\r\n          return e.id === expId;\r\n        });\r\n        // console.log(updatedObj, \"old object\");\r\n\r\n        var storageArry = JSON.parse(localStorage.getItem(\"Product Detail\"));\r\n\r\n        var indexNum = storageArry.findIndex((x) => x.id === expId);\r\n\r\n        // console.log(indexNum, newarray, \"indexNum....\");\r\n\r\n        updatedObj.product = idObj.product;\r\n        updatedObj.amount = idObj.amount;\r\n\r\n        var updatedExp = [...exp];\r\n\r\n        updatedExp[indexNum] = updatedObj;\r\n\r\n        // console.log(updatedObj, \"new object\");\r\n\r\n        setExp(updatedExp);\r\n\r\n        setExpIndex(null);\r\n      } else {\r\n        setExp([...exp, idObj]);\r\n      }\r\n\r\n      setObj({ product: \"\", amount: \"\" });\r\n      productRef.current.value = null;\r\n      amountRef.current.value = null;\r\n      expBtn.current.textContent = \"Add Expence\";\r\n    }\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    if (exp.length > 0) {\r\n      localStorage.setItem(\"Product Detail\", JSON.stringify(exp));\r\n    }\r\n  }, [exp]);\r\n\r\n  useEffect(() => {\r\n    var storageArry = JSON.parse(localStorage.getItem(\"Product Detail\"));\r\n\r\n    var indexNum = storageArry.findIndex((x) => x.id === expId);\r\n\r\n    if (exp[expIndex]) {\r\n      productRef.current.value = exp[indexNum].product;\r\n      amountRef.current.value = exp[indexNum].amount;\r\n      expBtn.current.textContent = \"Update\";\r\n    }\r\n  }, [expIndex]);\r\n\r\n  return (\r\n    <div className=\"box2-2\">\r\n      <h4 style={{ marginBottom: \"10px\" }}>Expences</h4>\r\n      <input\r\n        onChange={handlechange}\r\n        className=\"pro\"\r\n        placeholder=\"Product\"\r\n        type=\"string\"\r\n        ref={productRef}\r\n        name=\"product\"\r\n      />\r\n      <input\r\n        onChange={handlechange}\r\n        className=\"pro\"\r\n        placeholder=\"Amount\"\r\n        type=\"number\"\r\n        ref={amountRef}\r\n        name=\"amount\"\r\n      />\r\n      <br />\r\n      <button onClick={handleclick} className=\"button-3\" ref={expBtn}>\r\n        Add Expence\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expence;\r\n","D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\List.jsx",[],[],"D:\\Next Project\\budget-reactjs-app\\src\\Components\\Home\\TotalBudget.jsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":22,"column":6,"nodeType":"58","endLine":22,"endColumn":11,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":103,"column":6,"nodeType":"58","endLine":103,"endColumn":16,"suggestions":"61"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'remBal'. Either include it or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has missing dependencies: 'exp' and 'expId'. Either include them or remove the dependency array.",["63"],{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [exp, remBal]",{"range":"68","text":"69"},"Update the dependencies array to be: [exp, expId, expIndex]",{"range":"70","text":"71"},[533,538],"[exp, remBal]",[2866,2876],"[exp, expId, expIndex]"]